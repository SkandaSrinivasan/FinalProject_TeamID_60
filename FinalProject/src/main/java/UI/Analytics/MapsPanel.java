/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Analytics;

import Business.EcoSystem;
import Business.Network.Network;
import Business.Organization.Patient;
import JxMaps.main.MapMarker;
import JxMaps.main.Modal.LatLong;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Skanda
 */
public class MapsPanel extends javax.swing.JPanel {

    /**
     * Creates new form MapsPanel
     */
    EcoSystem system;
    
    public MapsPanel(EcoSystem system) {
        initComponents();
        this.system = system;
        for(Network n:system.getNetworkMap().values()){
            network.addItem(n);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        network = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        infectedMap = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setBackground(new java.awt.Color(0, 184, 148));
        jLabel1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Analytic Maps");
        jLabel1.setOpaque(true);

        network.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        network.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Network Name:");

        infectedMap.setBackground(new java.awt.Color(211, 84, 0));
        infectedMap.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        infectedMap.setForeground(new java.awt.Color(255, 255, 255));
        infectedMap.setText("View Infected Population");
        infectedMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infectedMapActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 184, 148));
        jButton1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("View Vaccinated Population");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(network, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(infectedMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(network, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(infectedMap, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 338, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void infectedMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infectedMapActionPerformed
        // TODO add your handling code here:
        List<LatLong> infected = new ArrayList<>();
        Network n = (Network) network.getSelectedItem();
        for(Patient p:n.getPatientDirectory().getPatients()){
            if(p.getCovidStatus().equalsIgnoreCase("infected")){
                infected.add(p.getLocation());
            }
        }
        System.out.println(infected);
        MapMarker map = new MapMarker();
        map.setInfectedMarkers(infected, system);
        
    }//GEN-LAST:event_infectedMapActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        List<LatLong> infected = new ArrayList<>();
        Network n = (Network) network.getSelectedItem();
        for(Patient p:n.getPatientDirectory().getPatients()){
            if(p.getVaxStatus().equalsIgnoreCase("Vaccinated")){
                infected.add(p.getLocation());
            }
        }
        System.out.println(infected);
        MapMarker map = new MapMarker();
        map.setVaxMapMarkers(infected, system);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton infectedMap;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<Network> network;
    // End of variables declaration//GEN-END:variables
}
